#+TITLE: zig-napi
#+DATE: 2025-06-10T21:55:37+0800
#+LASTMOD: 2025-06-21T22:41:59+0800
#+AUTHOR: Jiacai Liu

[[https://github.com/jiacai2050/zig-napi/actions/workflows/CI.yml][https://github.com/jiacai2050/zig-napi/actions/workflows/CI.yml/badge.svg]]
[[https://img.shields.io/badge/zig%20version-0.14.1-blue.svg]]

[[https://nodejs.org/api/n-api.html][Node-API]] bindings for Zig.

* Examples
#+begin_src bash :results verbatim :exports both :wrap src zig
cat examples/hello.zig
#+end_src

#+RESULTS:
#+begin_src zig
const std = @import("std");
const napi = @import("napi");

// Every napi module needs to call `registerModule` to register it with the N-API runtime.
comptime {
    napi.registerModule(init);
}

fn hello(e: napi.Env, who: napi.Value) !napi.Value {
    var buf: [64]u8 = undefined;
    const len = try who.getValueString(.utf8, &buf);
    const allocator = std.heap.page_allocator;
    const message = try std.fmt.allocPrint(allocator, "Hello {s}", .{buf[0..len]});
    defer allocator.free(message);

    return try e.createString(.utf8, message);
}

pub fn init(env: napi.Env, exports: napi.Value) !napi.Value {
    try exports.setNamedProperty(
        "hello",
        try env.createFunction(hello, null),
    );

    return exports;
}
#+end_src


#+begin_src bash :results verbatim :exports both :wrap src zig
cat examples/hello.js
#+end_src

#+RESULTS:
#+begin_src zig
const addon = require('../zig-out/lib/hello.node');
const assert = require('node:assert/strict');

assert.strictEqual('Hello Tom', addon.hello('Tom'));
assert.strictEqual('Hello Jack', addon.hello('Jack'));
#+end_src

More examples can be found in [[file:tests/][tests]] directory.
